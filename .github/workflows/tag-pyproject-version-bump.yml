name: Tag python pyproject.toml version bumps

on:
  workflow_call:
    inputs:
      create_release:
        description: 'Whether to create a GitHub release with the tag'
        required: false
        type: boolean
        default: false

jobs:
  tag-npm-version-bump:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Git config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "<>"

      - name: Get version changes in commit history
        id: get_version_changes
        run: |
          found_tags=()
          for commit_hash in $(git rev-list ${{ github.event.before}}..${{ github.sha}}); do
              git checkout $commit_hash
              version=$(git diff ${commit_hash}^! -- pyproject.toml | awk -F'"' '/^\+\s*version/ {print $2}' | head -n 1)
              if [ -n "$version" ]; then
                tag="v${version}"
                if [ $(git tag -l $tag | wc -l) -eq 0 ]; then
                  git tag -a $tag $commit_hash -m "Tag version ${version}"
                  git push origin $tag
                  found_tags+=("$tag:$version:$commit_hash")
                fi
              fi
          done
          echo "tags=$(IFS=,; echo "${found_tags[*]}")" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Releases
        if: ${{ inputs.create_release == true && steps.get_version_changes.outputs.tags != '' }}
        run: |
          IFS=',' read -ra TAGS_ARRAY <<< "${{ steps.get_version_changes.outputs.tags }}"

          for tag_info in "${TAGS_ARRAY[@]}"; do
            IFS=':' read -ra TAG_PARTS <<< "$tag_info"
            tag="${TAG_PARTS[0]}"
            version="${TAG_PARTS[1]}"
            commit="${TAG_PARTS[2]}"

            echo "Creating release for tag $tag (version $version)"

            gh release create "$tag" \
              --title "$tag" \
              --notes "$tag" \
              --target "$commit"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}